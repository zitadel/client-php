<?php
/**
 * V2LoginSettingsTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Zitadel\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * OpenAI API
 *
 * merged spec
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace Zitadel\Client\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * V2LoginSettingsTest Class Doc Comment
 *
 * @category    Class
 * @description V2LoginSettings
 * @package     Zitadel\Client
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class V2LoginSettingsTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "V2LoginSettings"
     */
    public function testV2LoginSettings()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allowUsernamePassword"
     */
    public function testPropertyAllowUsernamePassword()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allowRegister"
     */
    public function testPropertyAllowRegister()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allowExternalIdp"
     */
    public function testPropertyAllowExternalIdp()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "forceMfa"
     */
    public function testPropertyForceMfa()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passkeysType"
     */
    public function testPropertyPasskeysType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hidePasswordReset"
     */
    public function testPropertyHidePasswordReset()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ignoreUnknownUsernames"
     */
    public function testPropertyIgnoreUnknownUsernames()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "defaultRedirectUri"
     */
    public function testPropertyDefaultRedirectUri()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "passwordCheckLifetime"
     */
    public function testPropertyPasswordCheckLifetime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "externalLoginCheckLifetime"
     */
    public function testPropertyExternalLoginCheckLifetime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mfaInitSkipLifetime"
     */
    public function testPropertyMfaInitSkipLifetime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "secondFactorCheckLifetime"
     */
    public function testPropertySecondFactorCheckLifetime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "multiFactorCheckLifetime"
     */
    public function testPropertyMultiFactorCheckLifetime()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "secondFactors"
     */
    public function testPropertySecondFactors()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "multiFactors"
     */
    public function testPropertyMultiFactors()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "allowDomainDiscovery"
     */
    public function testPropertyAllowDomainDiscovery()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disableLoginWithEmail"
     */
    public function testPropertyDisableLoginWithEmail()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disableLoginWithPhone"
     */
    public function testPropertyDisableLoginWithPhone()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "resourceOwnerType"
     */
    public function testPropertyResourceOwnerType()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "forceMfaLocalOnly"
     */
    public function testPropertyForceMfaLocalOnly()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
