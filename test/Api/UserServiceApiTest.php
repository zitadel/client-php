<?php
/**
 * UserServiceApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Zitadel\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * OpenAI API
 *
 * merged spec
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Zitadel\Client\Test\Api;

use \Zitadel\Client\Configuration;
use \Zitadel\Client\ApiException;
use \Zitadel\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * UserServiceApiTest Class Doc Comment
 *
 * @category Class
 * @package  Zitadel\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class UserServiceApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for addHumanUser
     *
     * Create a new human user.
     *
     */
    public function testAddHumanUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addIDPLink
     *
     * Add link to an identity provider to an user.
     *
     */
    public function testAddIDPLink()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addOTPEmail
     *
     * Add OTP Email for a user.
     *
     */
    public function testAddOTPEmail()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for addOTPSMS
     *
     * Add OTP SMS for a user.
     *
     */
    public function testAddOTPSMS()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createInviteCode
     *
     * Create an invite code for a user.
     *
     */
    public function testCreateInviteCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createPasskeyRegistrationLink
     *
     * Create a passkey registration link for a user.
     *
     */
    public function testCreatePasskeyRegistrationLink()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deactivateUser
     *
     * Deactivate user.
     *
     */
    public function testDeactivateUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteUser
     *
     * Delete user.
     *
     */
    public function testDeleteUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getUserByID
     *
     * User by ID.
     *
     */
    public function testGetUserByID()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for humanMFAInitSkipped
     *
     * MFA Init Skipped.
     *
     */
    public function testHumanMFAInitSkipped()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listAuthenticationFactors
     *
     * .
     *
     */
    public function testListAuthenticationFactors()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listAuthenticationMethodTypes
     *
     * List all possible authentication methods of a user.
     *
     */
    public function testListAuthenticationMethodTypes()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listIDPLinks
     *
     * List links to an identity provider of an user.
     *
     */
    public function testListIDPLinks()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listPasskeys
     *
     * List passkeys of an user.
     *
     */
    public function testListPasskeys()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for listUsers
     *
     * Search Users.
     *
     */
    public function testListUsers()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for lockUser
     *
     * Lock user.
     *
     */
    public function testLockUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for passwordReset
     *
     * Request a code to reset a password.
     *
     */
    public function testPasswordReset()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for reactivateUser
     *
     * Reactivate user.
     *
     */
    public function testReactivateUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for registerPasskey
     *
     * Start the registration of passkey for a user.
     *
     */
    public function testRegisterPasskey()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for registerTOTP
     *
     * Start the registration of a TOTP generator for a user.
     *
     */
    public function testRegisterTOTP()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for registerU2F
     *
     * Start the registration of a u2f token for a user.
     *
     */
    public function testRegisterU2F()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeIDPLink
     *
     * Remove link of an identity provider to an user.
     *
     */
    public function testRemoveIDPLink()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeOTPEmail
     *
     * Remove One-Time Password (OTP) Email from a user.
     *
     */
    public function testRemoveOTPEmail()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeOTPSMS
     *
     * Remove One-Time Password (OTP) SMS from a user.
     *
     */
    public function testRemoveOTPSMS()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removePasskey
     *
     * Remove passkey from a user.
     *
     */
    public function testRemovePasskey()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removePhone
     *
     * Delete the user phone.
     *
     */
    public function testRemovePhone()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeTOTP
     *
     * Remove TOTP generator from a user.
     *
     */
    public function testRemoveTOTP()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for removeU2F
     *
     * Remove u2f token from a user.
     *
     */
    public function testRemoveU2F()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for resendEmailCode
     *
     * Resend code to verify user email.
     *
     */
    public function testResendEmailCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for resendInviteCode
     *
     * Resend an invite code for a user.
     *
     */
    public function testResendInviteCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for resendPhoneCode
     *
     * Resend code to verify user phone.
     *
     */
    public function testResendPhoneCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for retrieveIdentityProviderIntent
     *
     * Retrieve the information returned by the identity provider.
     *
     */
    public function testRetrieveIdentityProviderIntent()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sendEmailCode
     *
     * Send code to verify user email.
     *
     */
    public function testSendEmailCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setEmail
     *
     * Change the user email.
     *
     */
    public function testSetEmail()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setPassword
     *
     * Change password.
     *
     */
    public function testSetPassword()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for setPhone
     *
     * Set the user phone.
     *
     */
    public function testSetPhone()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for startIdentityProviderIntent
     *
     * Start flow with an identity provider.
     *
     */
    public function testStartIdentityProviderIntent()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for unlockUser
     *
     * Unlock user.
     *
     */
    public function testUnlockUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateHumanUser
     *
     * Update User.
     *
     */
    public function testUpdateHumanUser()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for verifyEmail
     *
     * Verify the email.
     *
     */
    public function testVerifyEmail()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for verifyInviteCode
     *
     * Verify an invite code for a user.
     *
     */
    public function testVerifyInviteCode()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for verifyPasskeyRegistration
     *
     * Verify a passkey for a user.
     *
     */
    public function testVerifyPasskeyRegistration()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for verifyPhone
     *
     * Verify the phone.
     *
     */
    public function testVerifyPhone()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for verifyTOTPRegistration
     *
     * Verify a TOTP generator for a user.
     *
     */
    public function testVerifyTOTPRegistration()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for verifyU2FRegistration
     *
     * Verify a u2f token for a user.
     *
     */
    public function testVerifyU2FRegistration()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
