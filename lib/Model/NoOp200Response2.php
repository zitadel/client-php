<?php
/**
 * NoOp200Response2
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  Zitadel\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Zitadel SDK
 *
 * The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Zitadel\Client\Model;

use \ArrayAccess;
use \Zitadel\Client\ObjectSerializer;

/**
 * NoOp200Response2 Class Doc Comment
 *
 * @category Class
 * @package  Zitadel\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class NoOp200Response2 implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'NoOp_200_response_2';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'dde1f912Ba9e453eB2971fef63d14005' => '\Zitadel\Client\Model\BetaSessionServiceCreationDateQuery',
        '_8793eb162f9a4e7a9b140b5d19c727fe' => '\Zitadel\Client\Model\BetaSessionServiceIDsQuery',
        '_26baaf13A97a452a9749E1f1ea4e3c05' => 'object',
        '_5c1a6ccfBdfa42baB10765f734670bd3' => '\Zitadel\Client\Model\BetaSessionServiceSendCode',
        '_9fcb5c69A0274dc7B1f896a22a15d47f' => '\Zitadel\Client\Model\BetaSessionServiceUserIDQuery'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'dde1f912Ba9e453eB2971fef63d14005' => null,
        '_8793eb162f9a4e7a9b140b5d19c727fe' => null,
        '_26baaf13A97a452a9749E1f1ea4e3c05' => null,
        '_5c1a6ccfBdfa42baB10765f734670bd3' => null,
        '_9fcb5c69A0274dc7B1f896a22a15d47f' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        'dde1f912Ba9e453eB2971fef63d14005' => false,
        '_8793eb162f9a4e7a9b140b5d19c727fe' => false,
        '_26baaf13A97a452a9749E1f1ea4e3c05' => false,
        '_5c1a6ccfBdfa42baB10765f734670bd3' => false,
        '_9fcb5c69A0274dc7B1f896a22a15d47f' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'dde1f912Ba9e453eB2971fef63d14005' => 'dde1f912-ba9e-453e-b297-1fef63d14005',
        '_8793eb162f9a4e7a9b140b5d19c727fe' => '8793eb16-2f9a-4e7a-9b14-0b5d19c727fe',
        '_26baaf13A97a452a9749E1f1ea4e3c05' => '26baaf13-a97a-452a-9749-e1f1ea4e3c05',
        '_5c1a6ccfBdfa42baB10765f734670bd3' => '5c1a6ccf-bdfa-42ba-b107-65f734670bd3',
        '_9fcb5c69A0274dc7B1f896a22a15d47f' => '9fcb5c69-a027-4dc7-b1f8-96a22a15d47f'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'dde1f912Ba9e453eB2971fef63d14005' => 'setDde1f912Ba9e453eB2971fef63d14005',
        '_8793eb162f9a4e7a9b140b5d19c727fe' => 'set8793eb162f9a4e7a9b140b5d19c727fe',
        '_26baaf13A97a452a9749E1f1ea4e3c05' => 'set26baaf13A97a452a9749E1f1ea4e3c05',
        '_5c1a6ccfBdfa42baB10765f734670bd3' => 'set5c1a6ccfBdfa42baB10765f734670bd3',
        '_9fcb5c69A0274dc7B1f896a22a15d47f' => 'set9fcb5c69A0274dc7B1f896a22a15d47f'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'dde1f912Ba9e453eB2971fef63d14005' => 'getDde1f912Ba9e453eB2971fef63d14005',
        '_8793eb162f9a4e7a9b140b5d19c727fe' => 'get8793eb162f9a4e7a9b140b5d19c727fe',
        '_26baaf13A97a452a9749E1f1ea4e3c05' => 'get26baaf13A97a452a9749E1f1ea4e3c05',
        '_5c1a6ccfBdfa42baB10765f734670bd3' => 'get5c1a6ccfBdfa42baB10765f734670bd3',
        '_9fcb5c69A0274dc7B1f896a22a15d47f' => 'get9fcb5c69A0274dc7B1f896a22a15d47f'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[]|null $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(?array $data = null)
    {
        $this->setIfExists('dde1f912Ba9e453eB2971fef63d14005', $data ?? [], null);
        $this->setIfExists('_8793eb162f9a4e7a9b140b5d19c727fe', $data ?? [], null);
        $this->setIfExists('_26baaf13A97a452a9749E1f1ea4e3c05', $data ?? [], null);
        $this->setIfExists('_5c1a6ccfBdfa42baB10765f734670bd3', $data ?? [], null);
        $this->setIfExists('_9fcb5c69A0274dc7B1f896a22a15d47f', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets dde1f912Ba9e453eB2971fef63d14005
     *
     * @return \Zitadel\Client\Model\BetaSessionServiceCreationDateQuery|null
     */
    public function getDde1f912Ba9e453eB2971fef63d14005()
    {
        return $this->container['dde1f912Ba9e453eB2971fef63d14005'];
    }

    /**
     * Sets dde1f912Ba9e453eB2971fef63d14005
     *
     * @param \Zitadel\Client\Model\BetaSessionServiceCreationDateQuery|null $dde1f912Ba9e453eB2971fef63d14005 dde1f912Ba9e453eB2971fef63d14005
     *
     * @return self
     */
    public function setDde1f912Ba9e453eB2971fef63d14005($dde1f912Ba9e453eB2971fef63d14005)
    {
        if (is_null($dde1f912Ba9e453eB2971fef63d14005)) {
            throw new \InvalidArgumentException('non-nullable dde1f912Ba9e453eB2971fef63d14005 cannot be null');
        }
        $this->container['dde1f912Ba9e453eB2971fef63d14005'] = $dde1f912Ba9e453eB2971fef63d14005;

        return $this;
    }

    /**
     * Gets _8793eb162f9a4e7a9b140b5d19c727fe
     *
     * @return \Zitadel\Client\Model\BetaSessionServiceIDsQuery|null
     */
    public function get8793eb162f9a4e7a9b140b5d19c727fe()
    {
        return $this->container['_8793eb162f9a4e7a9b140b5d19c727fe'];
    }

    /**
     * Sets _8793eb162f9a4e7a9b140b5d19c727fe
     *
     * @param \Zitadel\Client\Model\BetaSessionServiceIDsQuery|null $_8793eb162f9a4e7a9b140b5d19c727fe _8793eb162f9a4e7a9b140b5d19c727fe
     *
     * @return self
     */
    public function set8793eb162f9a4e7a9b140b5d19c727fe($_8793eb162f9a4e7a9b140b5d19c727fe)
    {
        if (is_null($_8793eb162f9a4e7a9b140b5d19c727fe)) {
            throw new \InvalidArgumentException('non-nullable _8793eb162f9a4e7a9b140b5d19c727fe cannot be null');
        }
        $this->container['_8793eb162f9a4e7a9b140b5d19c727fe'] = $_8793eb162f9a4e7a9b140b5d19c727fe;

        return $this;
    }

    /**
     * Gets _26baaf13A97a452a9749E1f1ea4e3c05
     *
     * @return object|null
     */
    public function get26baaf13A97a452a9749E1f1ea4e3c05()
    {
        return $this->container['_26baaf13A97a452a9749E1f1ea4e3c05'];
    }

    /**
     * Sets _26baaf13A97a452a9749E1f1ea4e3c05
     *
     * @param object|null $_26baaf13A97a452a9749E1f1ea4e3c05 _26baaf13A97a452a9749E1f1ea4e3c05
     *
     * @return self
     */
    public function set26baaf13A97a452a9749E1f1ea4e3c05($_26baaf13A97a452a9749E1f1ea4e3c05)
    {
        if (is_null($_26baaf13A97a452a9749E1f1ea4e3c05)) {
            throw new \InvalidArgumentException('non-nullable _26baaf13A97a452a9749E1f1ea4e3c05 cannot be null');
        }
        $this->container['_26baaf13A97a452a9749E1f1ea4e3c05'] = $_26baaf13A97a452a9749E1f1ea4e3c05;

        return $this;
    }

    /**
     * Gets _5c1a6ccfBdfa42baB10765f734670bd3
     *
     * @return \Zitadel\Client\Model\BetaSessionServiceSendCode|null
     */
    public function get5c1a6ccfBdfa42baB10765f734670bd3()
    {
        return $this->container['_5c1a6ccfBdfa42baB10765f734670bd3'];
    }

    /**
     * Sets _5c1a6ccfBdfa42baB10765f734670bd3
     *
     * @param \Zitadel\Client\Model\BetaSessionServiceSendCode|null $_5c1a6ccfBdfa42baB10765f734670bd3 _5c1a6ccfBdfa42baB10765f734670bd3
     *
     * @return self
     */
    public function set5c1a6ccfBdfa42baB10765f734670bd3($_5c1a6ccfBdfa42baB10765f734670bd3)
    {
        if (is_null($_5c1a6ccfBdfa42baB10765f734670bd3)) {
            throw new \InvalidArgumentException('non-nullable _5c1a6ccfBdfa42baB10765f734670bd3 cannot be null');
        }
        $this->container['_5c1a6ccfBdfa42baB10765f734670bd3'] = $_5c1a6ccfBdfa42baB10765f734670bd3;

        return $this;
    }

    /**
     * Gets _9fcb5c69A0274dc7B1f896a22a15d47f
     *
     * @return \Zitadel\Client\Model\BetaSessionServiceUserIDQuery|null
     */
    public function get9fcb5c69A0274dc7B1f896a22a15d47f()
    {
        return $this->container['_9fcb5c69A0274dc7B1f896a22a15d47f'];
    }

    /**
     * Sets _9fcb5c69A0274dc7B1f896a22a15d47f
     *
     * @param \Zitadel\Client\Model\BetaSessionServiceUserIDQuery|null $_9fcb5c69A0274dc7B1f896a22a15d47f _9fcb5c69A0274dc7B1f896a22a15d47f
     *
     * @return self
     */
    public function set9fcb5c69A0274dc7B1f896a22a15d47f($_9fcb5c69A0274dc7B1f896a22a15d47f)
    {
        if (is_null($_9fcb5c69A0274dc7B1f896a22a15d47f)) {
            throw new \InvalidArgumentException('non-nullable _9fcb5c69A0274dc7B1f896a22a15d47f cannot be null');
        }
        $this->container['_9fcb5c69A0274dc7B1f896a22a15d47f'] = $_9fcb5c69A0274dc7B1f896a22a15d47f;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


