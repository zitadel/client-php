<?php
/**
 * NoOp200Response13
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  Zitadel\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Zitadel SDK
 *
 * The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Zitadel\Client\Model;

use \ArrayAccess;
use \Zitadel\Client\ObjectSerializer;

/**
 * NoOp200Response13 Class Doc Comment
 *
 * @category Class
 * @package  Zitadel\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class NoOp200Response13 implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'NoOp_200_response_13';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        '_1d389ad77073465aAb7d7abbd9639aca' => '\Zitadel\Client\Model\BetaInstanceServiceDomainGeneratedQuery',
        '_9ad274dd8a5b4da8853fE37eb4ec1515' => '\Zitadel\Client\Model\BetaInstanceServiceDomainPrimaryQuery',
        '_9fa2e511D0c6498396abD118445f6c5e' => '\Zitadel\Client\Model\BetaInstanceServiceDomainQuery',
        '_1c5d274934404063873e50f195e0fff4' => '\Zitadel\Client\Model\BetaInstanceServiceDomainsQuery',
        '_6646ad638a234f088d207e4b9afaaeed' => '\Zitadel\Client\Model\BetaInstanceServiceIdsQuery'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        '_1d389ad77073465aAb7d7abbd9639aca' => null,
        '_9ad274dd8a5b4da8853fE37eb4ec1515' => null,
        '_9fa2e511D0c6498396abD118445f6c5e' => null,
        '_1c5d274934404063873e50f195e0fff4' => null,
        '_6646ad638a234f088d207e4b9afaaeed' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        '_1d389ad77073465aAb7d7abbd9639aca' => false,
        '_9ad274dd8a5b4da8853fE37eb4ec1515' => false,
        '_9fa2e511D0c6498396abD118445f6c5e' => false,
        '_1c5d274934404063873e50f195e0fff4' => false,
        '_6646ad638a234f088d207e4b9afaaeed' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        '_1d389ad77073465aAb7d7abbd9639aca' => '1d389ad7-7073-465a-ab7d-7abbd9639aca',
        '_9ad274dd8a5b4da8853fE37eb4ec1515' => '9ad274dd-8a5b-4da8-853f-e37eb4ec1515',
        '_9fa2e511D0c6498396abD118445f6c5e' => '9fa2e511-d0c6-4983-96ab-d118445f6c5e',
        '_1c5d274934404063873e50f195e0fff4' => '1c5d2749-3440-4063-873e-50f195e0fff4',
        '_6646ad638a234f088d207e4b9afaaeed' => '6646ad63-8a23-4f08-8d20-7e4b9afaaeed'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        '_1d389ad77073465aAb7d7abbd9639aca' => 'set1d389ad77073465aAb7d7abbd9639aca',
        '_9ad274dd8a5b4da8853fE37eb4ec1515' => 'set9ad274dd8a5b4da8853fE37eb4ec1515',
        '_9fa2e511D0c6498396abD118445f6c5e' => 'set9fa2e511D0c6498396abD118445f6c5e',
        '_1c5d274934404063873e50f195e0fff4' => 'set1c5d274934404063873e50f195e0fff4',
        '_6646ad638a234f088d207e4b9afaaeed' => 'set6646ad638a234f088d207e4b9afaaeed'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        '_1d389ad77073465aAb7d7abbd9639aca' => 'get1d389ad77073465aAb7d7abbd9639aca',
        '_9ad274dd8a5b4da8853fE37eb4ec1515' => 'get9ad274dd8a5b4da8853fE37eb4ec1515',
        '_9fa2e511D0c6498396abD118445f6c5e' => 'get9fa2e511D0c6498396abD118445f6c5e',
        '_1c5d274934404063873e50f195e0fff4' => 'get1c5d274934404063873e50f195e0fff4',
        '_6646ad638a234f088d207e4b9afaaeed' => 'get6646ad638a234f088d207e4b9afaaeed'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[]|null $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(?array $data = null)
    {
        $this->setIfExists('_1d389ad77073465aAb7d7abbd9639aca', $data ?? [], null);
        $this->setIfExists('_9ad274dd8a5b4da8853fE37eb4ec1515', $data ?? [], null);
        $this->setIfExists('_9fa2e511D0c6498396abD118445f6c5e', $data ?? [], null);
        $this->setIfExists('_1c5d274934404063873e50f195e0fff4', $data ?? [], null);
        $this->setIfExists('_6646ad638a234f088d207e4b9afaaeed', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets _1d389ad77073465aAb7d7abbd9639aca
     *
     * @return \Zitadel\Client\Model\BetaInstanceServiceDomainGeneratedQuery|null
     */
    public function get1d389ad77073465aAb7d7abbd9639aca()
    {
        return $this->container['_1d389ad77073465aAb7d7abbd9639aca'];
    }

    /**
     * Sets _1d389ad77073465aAb7d7abbd9639aca
     *
     * @param \Zitadel\Client\Model\BetaInstanceServiceDomainGeneratedQuery|null $_1d389ad77073465aAb7d7abbd9639aca _1d389ad77073465aAb7d7abbd9639aca
     *
     * @return self
     */
    public function set1d389ad77073465aAb7d7abbd9639aca($_1d389ad77073465aAb7d7abbd9639aca)
    {
        if (is_null($_1d389ad77073465aAb7d7abbd9639aca)) {
            throw new \InvalidArgumentException('non-nullable _1d389ad77073465aAb7d7abbd9639aca cannot be null');
        }
        $this->container['_1d389ad77073465aAb7d7abbd9639aca'] = $_1d389ad77073465aAb7d7abbd9639aca;

        return $this;
    }

    /**
     * Gets _9ad274dd8a5b4da8853fE37eb4ec1515
     *
     * @return \Zitadel\Client\Model\BetaInstanceServiceDomainPrimaryQuery|null
     */
    public function get9ad274dd8a5b4da8853fE37eb4ec1515()
    {
        return $this->container['_9ad274dd8a5b4da8853fE37eb4ec1515'];
    }

    /**
     * Sets _9ad274dd8a5b4da8853fE37eb4ec1515
     *
     * @param \Zitadel\Client\Model\BetaInstanceServiceDomainPrimaryQuery|null $_9ad274dd8a5b4da8853fE37eb4ec1515 _9ad274dd8a5b4da8853fE37eb4ec1515
     *
     * @return self
     */
    public function set9ad274dd8a5b4da8853fE37eb4ec1515($_9ad274dd8a5b4da8853fE37eb4ec1515)
    {
        if (is_null($_9ad274dd8a5b4da8853fE37eb4ec1515)) {
            throw new \InvalidArgumentException('non-nullable _9ad274dd8a5b4da8853fE37eb4ec1515 cannot be null');
        }
        $this->container['_9ad274dd8a5b4da8853fE37eb4ec1515'] = $_9ad274dd8a5b4da8853fE37eb4ec1515;

        return $this;
    }

    /**
     * Gets _9fa2e511D0c6498396abD118445f6c5e
     *
     * @return \Zitadel\Client\Model\BetaInstanceServiceDomainQuery|null
     */
    public function get9fa2e511D0c6498396abD118445f6c5e()
    {
        return $this->container['_9fa2e511D0c6498396abD118445f6c5e'];
    }

    /**
     * Sets _9fa2e511D0c6498396abD118445f6c5e
     *
     * @param \Zitadel\Client\Model\BetaInstanceServiceDomainQuery|null $_9fa2e511D0c6498396abD118445f6c5e _9fa2e511D0c6498396abD118445f6c5e
     *
     * @return self
     */
    public function set9fa2e511D0c6498396abD118445f6c5e($_9fa2e511D0c6498396abD118445f6c5e)
    {
        if (is_null($_9fa2e511D0c6498396abD118445f6c5e)) {
            throw new \InvalidArgumentException('non-nullable _9fa2e511D0c6498396abD118445f6c5e cannot be null');
        }
        $this->container['_9fa2e511D0c6498396abD118445f6c5e'] = $_9fa2e511D0c6498396abD118445f6c5e;

        return $this;
    }

    /**
     * Gets _1c5d274934404063873e50f195e0fff4
     *
     * @return \Zitadel\Client\Model\BetaInstanceServiceDomainsQuery|null
     */
    public function get1c5d274934404063873e50f195e0fff4()
    {
        return $this->container['_1c5d274934404063873e50f195e0fff4'];
    }

    /**
     * Sets _1c5d274934404063873e50f195e0fff4
     *
     * @param \Zitadel\Client\Model\BetaInstanceServiceDomainsQuery|null $_1c5d274934404063873e50f195e0fff4 _1c5d274934404063873e50f195e0fff4
     *
     * @return self
     */
    public function set1c5d274934404063873e50f195e0fff4($_1c5d274934404063873e50f195e0fff4)
    {
        if (is_null($_1c5d274934404063873e50f195e0fff4)) {
            throw new \InvalidArgumentException('non-nullable _1c5d274934404063873e50f195e0fff4 cannot be null');
        }
        $this->container['_1c5d274934404063873e50f195e0fff4'] = $_1c5d274934404063873e50f195e0fff4;

        return $this;
    }

    /**
     * Gets _6646ad638a234f088d207e4b9afaaeed
     *
     * @return \Zitadel\Client\Model\BetaInstanceServiceIdsQuery|null
     */
    public function get6646ad638a234f088d207e4b9afaaeed()
    {
        return $this->container['_6646ad638a234f088d207e4b9afaaeed'];
    }

    /**
     * Sets _6646ad638a234f088d207e4b9afaaeed
     *
     * @param \Zitadel\Client\Model\BetaInstanceServiceIdsQuery|null $_6646ad638a234f088d207e4b9afaaeed _6646ad638a234f088d207e4b9afaaeed
     *
     * @return self
     */
    public function set6646ad638a234f088d207e4b9afaaeed($_6646ad638a234f088d207e4b9afaaeed)
    {
        if (is_null($_6646ad638a234f088d207e4b9afaaeed)) {
            throw new \InvalidArgumentException('non-nullable _6646ad638a234f088d207e4b9afaaeed cannot be null');
        }
        $this->container['_6646ad638a234f088d207e4b9afaaeed'] = $_6646ad638a234f088d207e4b9afaaeed;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


