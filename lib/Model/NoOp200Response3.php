<?php
/**
 * NoOp200Response3
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  Zitadel\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Zitadel SDK
 *
 * The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Zitadel\Client\Model;

use \ArrayAccess;
use \Zitadel\Client\ObjectSerializer;

/**
 * NoOp200Response3 Class Doc Comment
 *
 * @category Class
 * @package  Zitadel\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class NoOp200Response3 implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'NoOp_200_response_3';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        '_50e4a42bA3da470e9fa12371604e532d' => '\Zitadel\Client\Model\BetaProjectServiceIDFilter',
        '_0fcd67bdC03c49d491529fc4b117e9d4' => '\Zitadel\Client\Model\BetaProjectServiceInIDsFilter',
        'd70298864434475d84e7B132c0a93b64' => '\Zitadel\Client\Model\BetaProjectServiceProjectNameFilter',
        'c8ea809e4f6d4931A11a3d5e56d33650' => '\Zitadel\Client\Model\BetaProjectServiceProjectRoleDisplayNameFilter',
        'c2871028Afd74282B46b8a9aeecd72b8' => '\Zitadel\Client\Model\BetaProjectServiceProjectRoleKeyFilter'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        '_50e4a42bA3da470e9fa12371604e532d' => null,
        '_0fcd67bdC03c49d491529fc4b117e9d4' => null,
        'd70298864434475d84e7B132c0a93b64' => null,
        'c8ea809e4f6d4931A11a3d5e56d33650' => null,
        'c2871028Afd74282B46b8a9aeecd72b8' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        '_50e4a42bA3da470e9fa12371604e532d' => false,
        '_0fcd67bdC03c49d491529fc4b117e9d4' => false,
        'd70298864434475d84e7B132c0a93b64' => false,
        'c8ea809e4f6d4931A11a3d5e56d33650' => false,
        'c2871028Afd74282B46b8a9aeecd72b8' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        '_50e4a42bA3da470e9fa12371604e532d' => '50e4a42b-a3da-470e-9fa1-2371604e532d',
        '_0fcd67bdC03c49d491529fc4b117e9d4' => '0fcd67bd-c03c-49d4-9152-9fc4b117e9d4',
        'd70298864434475d84e7B132c0a93b64' => 'd7029886-4434-475d-84e7-b132c0a93b64',
        'c8ea809e4f6d4931A11a3d5e56d33650' => 'c8ea809e-4f6d-4931-a11a-3d5e56d33650',
        'c2871028Afd74282B46b8a9aeecd72b8' => 'c2871028-afd7-4282-b46b-8a9aeecd72b8'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        '_50e4a42bA3da470e9fa12371604e532d' => 'set50e4a42bA3da470e9fa12371604e532d',
        '_0fcd67bdC03c49d491529fc4b117e9d4' => 'set0fcd67bdC03c49d491529fc4b117e9d4',
        'd70298864434475d84e7B132c0a93b64' => 'setD70298864434475d84e7B132c0a93b64',
        'c8ea809e4f6d4931A11a3d5e56d33650' => 'setC8ea809e4f6d4931A11a3d5e56d33650',
        'c2871028Afd74282B46b8a9aeecd72b8' => 'setC2871028Afd74282B46b8a9aeecd72b8'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        '_50e4a42bA3da470e9fa12371604e532d' => 'get50e4a42bA3da470e9fa12371604e532d',
        '_0fcd67bdC03c49d491529fc4b117e9d4' => 'get0fcd67bdC03c49d491529fc4b117e9d4',
        'd70298864434475d84e7B132c0a93b64' => 'getD70298864434475d84e7B132c0a93b64',
        'c8ea809e4f6d4931A11a3d5e56d33650' => 'getC8ea809e4f6d4931A11a3d5e56d33650',
        'c2871028Afd74282B46b8a9aeecd72b8' => 'getC2871028Afd74282B46b8a9aeecd72b8'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[]|null $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(?array $data = null)
    {
        $this->setIfExists('_50e4a42bA3da470e9fa12371604e532d', $data ?? [], null);
        $this->setIfExists('_0fcd67bdC03c49d491529fc4b117e9d4', $data ?? [], null);
        $this->setIfExists('d70298864434475d84e7B132c0a93b64', $data ?? [], null);
        $this->setIfExists('c8ea809e4f6d4931A11a3d5e56d33650', $data ?? [], null);
        $this->setIfExists('c2871028Afd74282B46b8a9aeecd72b8', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets _50e4a42bA3da470e9fa12371604e532d
     *
     * @return \Zitadel\Client\Model\BetaProjectServiceIDFilter|null
     */
    public function get50e4a42bA3da470e9fa12371604e532d()
    {
        return $this->container['_50e4a42bA3da470e9fa12371604e532d'];
    }

    /**
     * Sets _50e4a42bA3da470e9fa12371604e532d
     *
     * @param \Zitadel\Client\Model\BetaProjectServiceIDFilter|null $_50e4a42bA3da470e9fa12371604e532d _50e4a42bA3da470e9fa12371604e532d
     *
     * @return self
     */
    public function set50e4a42bA3da470e9fa12371604e532d($_50e4a42bA3da470e9fa12371604e532d)
    {
        if (is_null($_50e4a42bA3da470e9fa12371604e532d)) {
            throw new \InvalidArgumentException('non-nullable _50e4a42bA3da470e9fa12371604e532d cannot be null');
        }
        $this->container['_50e4a42bA3da470e9fa12371604e532d'] = $_50e4a42bA3da470e9fa12371604e532d;

        return $this;
    }

    /**
     * Gets _0fcd67bdC03c49d491529fc4b117e9d4
     *
     * @return \Zitadel\Client\Model\BetaProjectServiceInIDsFilter|null
     */
    public function get0fcd67bdC03c49d491529fc4b117e9d4()
    {
        return $this->container['_0fcd67bdC03c49d491529fc4b117e9d4'];
    }

    /**
     * Sets _0fcd67bdC03c49d491529fc4b117e9d4
     *
     * @param \Zitadel\Client\Model\BetaProjectServiceInIDsFilter|null $_0fcd67bdC03c49d491529fc4b117e9d4 _0fcd67bdC03c49d491529fc4b117e9d4
     *
     * @return self
     */
    public function set0fcd67bdC03c49d491529fc4b117e9d4($_0fcd67bdC03c49d491529fc4b117e9d4)
    {
        if (is_null($_0fcd67bdC03c49d491529fc4b117e9d4)) {
            throw new \InvalidArgumentException('non-nullable _0fcd67bdC03c49d491529fc4b117e9d4 cannot be null');
        }
        $this->container['_0fcd67bdC03c49d491529fc4b117e9d4'] = $_0fcd67bdC03c49d491529fc4b117e9d4;

        return $this;
    }

    /**
     * Gets d70298864434475d84e7B132c0a93b64
     *
     * @return \Zitadel\Client\Model\BetaProjectServiceProjectNameFilter|null
     */
    public function getD70298864434475d84e7B132c0a93b64()
    {
        return $this->container['d70298864434475d84e7B132c0a93b64'];
    }

    /**
     * Sets d70298864434475d84e7B132c0a93b64
     *
     * @param \Zitadel\Client\Model\BetaProjectServiceProjectNameFilter|null $d70298864434475d84e7B132c0a93b64 d70298864434475d84e7B132c0a93b64
     *
     * @return self
     */
    public function setD70298864434475d84e7B132c0a93b64($d70298864434475d84e7B132c0a93b64)
    {
        if (is_null($d70298864434475d84e7B132c0a93b64)) {
            throw new \InvalidArgumentException('non-nullable d70298864434475d84e7B132c0a93b64 cannot be null');
        }
        $this->container['d70298864434475d84e7B132c0a93b64'] = $d70298864434475d84e7B132c0a93b64;

        return $this;
    }

    /**
     * Gets c8ea809e4f6d4931A11a3d5e56d33650
     *
     * @return \Zitadel\Client\Model\BetaProjectServiceProjectRoleDisplayNameFilter|null
     */
    public function getC8ea809e4f6d4931A11a3d5e56d33650()
    {
        return $this->container['c8ea809e4f6d4931A11a3d5e56d33650'];
    }

    /**
     * Sets c8ea809e4f6d4931A11a3d5e56d33650
     *
     * @param \Zitadel\Client\Model\BetaProjectServiceProjectRoleDisplayNameFilter|null $c8ea809e4f6d4931A11a3d5e56d33650 c8ea809e4f6d4931A11a3d5e56d33650
     *
     * @return self
     */
    public function setC8ea809e4f6d4931A11a3d5e56d33650($c8ea809e4f6d4931A11a3d5e56d33650)
    {
        if (is_null($c8ea809e4f6d4931A11a3d5e56d33650)) {
            throw new \InvalidArgumentException('non-nullable c8ea809e4f6d4931A11a3d5e56d33650 cannot be null');
        }
        $this->container['c8ea809e4f6d4931A11a3d5e56d33650'] = $c8ea809e4f6d4931A11a3d5e56d33650;

        return $this;
    }

    /**
     * Gets c2871028Afd74282B46b8a9aeecd72b8
     *
     * @return \Zitadel\Client\Model\BetaProjectServiceProjectRoleKeyFilter|null
     */
    public function getC2871028Afd74282B46b8a9aeecd72b8()
    {
        return $this->container['c2871028Afd74282B46b8a9aeecd72b8'];
    }

    /**
     * Sets c2871028Afd74282B46b8a9aeecd72b8
     *
     * @param \Zitadel\Client\Model\BetaProjectServiceProjectRoleKeyFilter|null $c2871028Afd74282B46b8a9aeecd72b8 c2871028Afd74282B46b8a9aeecd72b8
     *
     * @return self
     */
    public function setC2871028Afd74282B46b8a9aeecd72b8($c2871028Afd74282B46b8a9aeecd72b8)
    {
        if (is_null($c2871028Afd74282B46b8a9aeecd72b8)) {
            throw new \InvalidArgumentException('non-nullable c2871028Afd74282B46b8a9aeecd72b8 cannot be null');
        }
        $this->container['c2871028Afd74282B46b8a9aeecd72b8'] = $c2871028Afd74282B46b8a9aeecd72b8;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


