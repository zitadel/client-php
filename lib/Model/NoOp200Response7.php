<?php
/**
 * NoOp200Response7
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Zitadel\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Zitadel SDK
 *
 * The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.12.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Zitadel\Client\Model;

use \ArrayAccess;
use \Zitadel\Client\ObjectSerializer;

/**
 * NoOp200Response7 Class Doc Comment
 *
 * @category Class
 * @package  Zitadel\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class NoOp200Response7 implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'NoOp_200_response_7';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        '_32657d173e6d45c6B95a57f0927e4246' => '\Zitadel\Client\Model\SAMLServiceAuthorizationError',
        'a730faa0963c46f7B1b3A7b2d884d7c8' => '\Zitadel\Client\Model\SAMLServicePostResponse',
        'e07bfd13Bce54fd7Be030e46462e5dea' => 'object',
        'e3919a44F603416e86e31abcc6493639' => '\Zitadel\Client\Model\SAMLServiceSession'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        '_32657d173e6d45c6B95a57f0927e4246' => null,
        'a730faa0963c46f7B1b3A7b2d884d7c8' => null,
        'e07bfd13Bce54fd7Be030e46462e5dea' => null,
        'e3919a44F603416e86e31abcc6493639' => null
    ];

    /**
      * Array of nullable properties. Used for (de)serialization
      *
      * @var boolean[]
      */
    protected static array $openAPINullables = [
        '_32657d173e6d45c6B95a57f0927e4246' => false,
        'a730faa0963c46f7B1b3A7b2d884d7c8' => false,
        'e07bfd13Bce54fd7Be030e46462e5dea' => false,
        'e3919a44F603416e86e31abcc6493639' => false
    ];

    /**
      * If a nullable field gets set to null, insert it here
      *
      * @var boolean[]
      */
    protected array $openAPINullablesSetToNull = [];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of nullable properties
     *
     * @return array
     */
    protected static function openAPINullables(): array
    {
        return self::$openAPINullables;
    }

    /**
     * Array of nullable field names deliberately set to null
     *
     * @return boolean[]
     */
    private function getOpenAPINullablesSetToNull(): array
    {
        return $this->openAPINullablesSetToNull;
    }

    /**
     * Setter - Array of nullable field names deliberately set to null
     *
     * @param boolean[] $openAPINullablesSetToNull
     */
    private function setOpenAPINullablesSetToNull(array $openAPINullablesSetToNull): void
    {
        $this->openAPINullablesSetToNull = $openAPINullablesSetToNull;
    }

    /**
     * Checks if a property is nullable
     *
     * @param string $property
     * @return bool
     */
    public static function isNullable(string $property): bool
    {
        return self::openAPINullables()[$property] ?? false;
    }

    /**
     * Checks if a nullable property is set to null.
     *
     * @param string $property
     * @return bool
     */
    public function isNullableSetToNull(string $property): bool
    {
        return in_array($property, $this->getOpenAPINullablesSetToNull(), true);
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        '_32657d173e6d45c6B95a57f0927e4246' => '32657d17-3e6d-45c6-b95a-57f0927e4246',
        'a730faa0963c46f7B1b3A7b2d884d7c8' => 'a730faa0-963c-46f7-b1b3-a7b2d884d7c8',
        'e07bfd13Bce54fd7Be030e46462e5dea' => 'e07bfd13-bce5-4fd7-be03-0e46462e5dea',
        'e3919a44F603416e86e31abcc6493639' => 'e3919a44-f603-416e-86e3-1abcc6493639'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        '_32657d173e6d45c6B95a57f0927e4246' => 'set32657d173e6d45c6B95a57f0927e4246',
        'a730faa0963c46f7B1b3A7b2d884d7c8' => 'setA730faa0963c46f7B1b3A7b2d884d7c8',
        'e07bfd13Bce54fd7Be030e46462e5dea' => 'setE07bfd13Bce54fd7Be030e46462e5dea',
        'e3919a44F603416e86e31abcc6493639' => 'setE3919a44F603416e86e31abcc6493639'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        '_32657d173e6d45c6B95a57f0927e4246' => 'get32657d173e6d45c6B95a57f0927e4246',
        'a730faa0963c46f7B1b3A7b2d884d7c8' => 'getA730faa0963c46f7B1b3A7b2d884d7c8',
        'e07bfd13Bce54fd7Be030e46462e5dea' => 'getE07bfd13Bce54fd7Be030e46462e5dea',
        'e3919a44F603416e86e31abcc6493639' => 'getE3919a44F603416e86e31abcc6493639'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[]|null $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(?array $data = null)
    {
        $this->setIfExists('_32657d173e6d45c6B95a57f0927e4246', $data ?? [], null);
        $this->setIfExists('a730faa0963c46f7B1b3A7b2d884d7c8', $data ?? [], null);
        $this->setIfExists('e07bfd13Bce54fd7Be030e46462e5dea', $data ?? [], null);
        $this->setIfExists('e3919a44F603416e86e31abcc6493639', $data ?? [], null);
    }

    /**
    * Sets $this->container[$variableName] to the given data or to the given default Value; if $variableName
    * is nullable and its value is set to null in the $fields array, then mark it as "set to null" in the
    * $this->openAPINullablesSetToNull array
    *
    * @param string $variableName
    * @param array  $fields
    * @param mixed  $defaultValue
    */
    private function setIfExists(string $variableName, array $fields, $defaultValue): void
    {
        if (self::isNullable($variableName) && array_key_exists($variableName, $fields) && is_null($fields[$variableName])) {
            $this->openAPINullablesSetToNull[] = $variableName;
        }

        $this->container[$variableName] = $fields[$variableName] ?? $defaultValue;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets _32657d173e6d45c6B95a57f0927e4246
     *
     * @return \Zitadel\Client\Model\SAMLServiceAuthorizationError|null
     */
    public function get32657d173e6d45c6B95a57f0927e4246()
    {
        return $this->container['_32657d173e6d45c6B95a57f0927e4246'];
    }

    /**
     * Sets _32657d173e6d45c6B95a57f0927e4246
     *
     * @param \Zitadel\Client\Model\SAMLServiceAuthorizationError|null $_32657d173e6d45c6B95a57f0927e4246 _32657d173e6d45c6B95a57f0927e4246
     *
     * @return self
     */
    public function set32657d173e6d45c6B95a57f0927e4246($_32657d173e6d45c6B95a57f0927e4246)
    {
        if (is_null($_32657d173e6d45c6B95a57f0927e4246)) {
            throw new \InvalidArgumentException('non-nullable _32657d173e6d45c6B95a57f0927e4246 cannot be null');
        }
        $this->container['_32657d173e6d45c6B95a57f0927e4246'] = $_32657d173e6d45c6B95a57f0927e4246;

        return $this;
    }

    /**
     * Gets a730faa0963c46f7B1b3A7b2d884d7c8
     *
     * @return \Zitadel\Client\Model\SAMLServicePostResponse|null
     */
    public function getA730faa0963c46f7B1b3A7b2d884d7c8()
    {
        return $this->container['a730faa0963c46f7B1b3A7b2d884d7c8'];
    }

    /**
     * Sets a730faa0963c46f7B1b3A7b2d884d7c8
     *
     * @param \Zitadel\Client\Model\SAMLServicePostResponse|null $a730faa0963c46f7B1b3A7b2d884d7c8 a730faa0963c46f7B1b3A7b2d884d7c8
     *
     * @return self
     */
    public function setA730faa0963c46f7B1b3A7b2d884d7c8($a730faa0963c46f7B1b3A7b2d884d7c8)
    {
        if (is_null($a730faa0963c46f7B1b3A7b2d884d7c8)) {
            throw new \InvalidArgumentException('non-nullable a730faa0963c46f7B1b3A7b2d884d7c8 cannot be null');
        }
        $this->container['a730faa0963c46f7B1b3A7b2d884d7c8'] = $a730faa0963c46f7B1b3A7b2d884d7c8;

        return $this;
    }

    /**
     * Gets e07bfd13Bce54fd7Be030e46462e5dea
     *
     * @return object|null
     */
    public function getE07bfd13Bce54fd7Be030e46462e5dea()
    {
        return $this->container['e07bfd13Bce54fd7Be030e46462e5dea'];
    }

    /**
     * Sets e07bfd13Bce54fd7Be030e46462e5dea
     *
     * @param object|null $e07bfd13Bce54fd7Be030e46462e5dea e07bfd13Bce54fd7Be030e46462e5dea
     *
     * @return self
     */
    public function setE07bfd13Bce54fd7Be030e46462e5dea($e07bfd13Bce54fd7Be030e46462e5dea)
    {
        if (is_null($e07bfd13Bce54fd7Be030e46462e5dea)) {
            throw new \InvalidArgumentException('non-nullable e07bfd13Bce54fd7Be030e46462e5dea cannot be null');
        }
        $this->container['e07bfd13Bce54fd7Be030e46462e5dea'] = $e07bfd13Bce54fd7Be030e46462e5dea;

        return $this;
    }

    /**
     * Gets e3919a44F603416e86e31abcc6493639
     *
     * @return \Zitadel\Client\Model\SAMLServiceSession|null
     */
    public function getE3919a44F603416e86e31abcc6493639()
    {
        return $this->container['e3919a44F603416e86e31abcc6493639'];
    }

    /**
     * Sets e3919a44F603416e86e31abcc6493639
     *
     * @param \Zitadel\Client\Model\SAMLServiceSession|null $e3919a44F603416e86e31abcc6493639 e3919a44F603416e86e31abcc6493639
     *
     * @return self
     */
    public function setE3919a44F603416e86e31abcc6493639($e3919a44F603416e86e31abcc6493639)
    {
        if (is_null($e3919a44F603416e86e31abcc6493639)) {
            throw new \InvalidArgumentException('non-nullable e3919a44F603416e86e31abcc6493639 cannot be null');
        }
        $this->container['e3919a44F603416e86e31abcc6493639'] = $e3919a44F603416e86e31abcc6493639;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


