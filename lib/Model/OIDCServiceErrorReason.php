<?php
/**
 * OIDCServiceErrorReason
 *
 * PHP version 8.1
 *
 * @category Class
 * @package  Zitadel\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Zitadel SDK
 *
 * The Zitadel SDK is a convenience wrapper around the Zitadel APIs to assist you in integrating with your Zitadel environment. This SDK enables you to handle resources, settings, and configurations within the Zitadel platform.
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.13.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Zitadel\Client\Model;
use \Zitadel\Client\ObjectSerializer;

/**
 * OIDCServiceErrorReason Class Doc Comment
 *
 * @category Class
 * @package  Zitadel\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OIDCServiceErrorReason
{
    /**
     * Possible values of this enum
     */
    public const ERROR_REASON_UNSPECIFIED = 'ERROR_REASON_UNSPECIFIED';

    public const ERROR_REASON_INVALID_REQUEST = 'ERROR_REASON_INVALID_REQUEST';

    public const ERROR_REASON_UNAUTHORIZED_CLIENT = 'ERROR_REASON_UNAUTHORIZED_CLIENT';

    public const ERROR_REASON_ACCESS_DENIED = 'ERROR_REASON_ACCESS_DENIED';

    public const ERROR_REASON_UNSUPPORTED_RESPONSE_TYPE = 'ERROR_REASON_UNSUPPORTED_RESPONSE_TYPE';

    public const ERROR_REASON_INVALID_SCOPE = 'ERROR_REASON_INVALID_SCOPE';

    public const ERROR_REASON_SERVER_ERROR = 'ERROR_REASON_SERVER_ERROR';

    public const ERROR_REASON_TEMPORARY_UNAVAILABLE = 'ERROR_REASON_TEMPORARY_UNAVAILABLE';

    public const ERROR_REASON_INTERACTION_REQUIRED = 'ERROR_REASON_INTERACTION_REQUIRED';

    public const ERROR_REASON_LOGIN_REQUIRED = 'ERROR_REASON_LOGIN_REQUIRED';

    public const ERROR_REASON_ACCOUNT_SELECTION_REQUIRED = 'ERROR_REASON_ACCOUNT_SELECTION_REQUIRED';

    public const ERROR_REASON_CONSENT_REQUIRED = 'ERROR_REASON_CONSENT_REQUIRED';

    public const ERROR_REASON_INVALID_REQUEST_URI = 'ERROR_REASON_INVALID_REQUEST_URI';

    public const ERROR_REASON_INVALID_REQUEST_OBJECT = 'ERROR_REASON_INVALID_REQUEST_OBJECT';

    public const ERROR_REASON_REQUEST_NOT_SUPPORTED = 'ERROR_REASON_REQUEST_NOT_SUPPORTED';

    public const ERROR_REASON_REQUEST_URI_NOT_SUPPORTED = 'ERROR_REASON_REQUEST_URI_NOT_SUPPORTED';

    public const ERROR_REASON_REGISTRATION_NOT_SUPPORTED = 'ERROR_REASON_REGISTRATION_NOT_SUPPORTED';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::ERROR_REASON_UNSPECIFIED,
            self::ERROR_REASON_INVALID_REQUEST,
            self::ERROR_REASON_UNAUTHORIZED_CLIENT,
            self::ERROR_REASON_ACCESS_DENIED,
            self::ERROR_REASON_UNSUPPORTED_RESPONSE_TYPE,
            self::ERROR_REASON_INVALID_SCOPE,
            self::ERROR_REASON_SERVER_ERROR,
            self::ERROR_REASON_TEMPORARY_UNAVAILABLE,
            self::ERROR_REASON_INTERACTION_REQUIRED,
            self::ERROR_REASON_LOGIN_REQUIRED,
            self::ERROR_REASON_ACCOUNT_SELECTION_REQUIRED,
            self::ERROR_REASON_CONSENT_REQUIRED,
            self::ERROR_REASON_INVALID_REQUEST_URI,
            self::ERROR_REASON_INVALID_REQUEST_OBJECT,
            self::ERROR_REASON_REQUEST_NOT_SUPPORTED,
            self::ERROR_REASON_REQUEST_URI_NOT_SUPPORTED,
            self::ERROR_REASON_REGISTRATION_NOT_SUPPORTED
        ];
    }
}


